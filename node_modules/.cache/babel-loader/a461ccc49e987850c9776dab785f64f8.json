{"ast":null,"code":"var _jsxFileName = \"/home/joanna/git/xfive/javascript-test/javascript-test/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Editor from \"./components/Editor\";\nimport Output from \"./components/Output\";\nimport Gallery from \"./components/Gallery\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [color, setColor] = useState(\"black\");\n  const [width, setWidth] = useState(\"50\");\n  const [height, setHeight] = useState(\"50\");\n  const [borderRadius, setBorderRadius] = useState(\"0\");\n\n  const handleSetColor = c => {\n    setColor(c);\n  };\n\n  const handleSetWidth = w => {\n    setWidth(w);\n  };\n\n  const handleSetHeight = h => {\n    setHeight(h);\n  };\n\n  const handleSetBorderRadius = b => {\n    setBorderRadius(b);\n  };\n\n  const rectsFromLocalStorage = localStorage.getItem(\"rects\");\n  const parsedRects = rectsFromLocalStorage ? JSON.parse(rectsFromLocalStorage) : [];\n  const [rects, setRects] = useState(parsedRects);\n\n  const handleSaveRect = () => {\n    const rect = {\n      id: Math.random(),\n      backgroundColor: color,\n      width: width,\n      height: height,\n      borderRadius: borderRadius\n    };\n    setRects(prevState => {\n      const updatedRects = [...prevState, rect];\n      saveRectsToLocalStorage(updatedRects);\n      return updatedRects;\n    });\n  };\n\n  const saveRectsToLocalStorage = rects => {\n    const rectsStringified = JSON.stringify(rects);\n    localStorage.setItem(\"rects\", rectsStringified);\n  };\n\n  const handleRemoveRect = id => {\n    setRects(prevState => {\n      const updatedRects = prevState.filter(el => el.id !== id);\n      saveRectsToLocalStorage(updatedRects);\n      return updatedRects;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Editor, {\n      handleSetColor: handleSetColor,\n      handleSetWidth: handleSetWidth,\n      handleSetHeight: handleSetHeight,\n      handleSetBorderRadius: handleSetBorderRadius,\n      handleSaveRect: handleSaveRect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Output, {\n      outputColor: color,\n      outputWidth: width,\n      outputHeight: height,\n      outputBorderRadius: borderRadius\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Gallery, {\n      rects: rects,\n      handleRemoveRect: handleRemoveRect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"Gdef+4cZvAqKE1yWWQYyWp883dk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/joanna/git/xfive/javascript-test/javascript-test/src/App.js"],"names":["React","useState","useEffect","Editor","Output","Gallery","App","color","setColor","width","setWidth","height","setHeight","borderRadius","setBorderRadius","handleSetColor","c","handleSetWidth","w","handleSetHeight","h","handleSetBorderRadius","b","rectsFromLocalStorage","localStorage","getItem","parsedRects","JSON","parse","rects","setRects","handleSaveRect","rect","id","Math","random","backgroundColor","prevState","updatedRects","saveRectsToLocalStorage","rectsStringified","stringify","setItem","handleRemoveRect","filter","el"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Editor from \"./components/Editor\";\nimport Output from \"./components/Output\";\nimport Gallery from \"./components/Gallery\";\n\nfunction App() {\n  const [color, setColor] = useState(\"black\");\n  const [width, setWidth] = useState(\"50\");\n  const [height, setHeight] = useState(\"50\");\n  const [borderRadius, setBorderRadius] = useState(\"0\");\n\n  const handleSetColor = (c) => {\n    setColor(c);\n  };\n\n  const handleSetWidth = (w) => {\n    setWidth(w);\n  };\n\n  const handleSetHeight = (h) => {\n    setHeight(h);\n  };\n\n  const handleSetBorderRadius = (b) => {\n    setBorderRadius(b);\n  };\n\n  const rectsFromLocalStorage = localStorage.getItem(\"rects\");\n\n  const parsedRects = rectsFromLocalStorage\n    ? JSON.parse(rectsFromLocalStorage)\n    : [];\n\n  const [rects, setRects] = useState(parsedRects);\n\n  const handleSaveRect = () => {\n    const rect = {\n      id: Math.random(),\n      backgroundColor: color,\n      width: width,\n      height: height,\n      borderRadius: borderRadius,\n    };\n    setRects((prevState) => {\n      const updatedRects = [...prevState, rect];\n      saveRectsToLocalStorage(updatedRects);\n      return updatedRects;\n    });\n  };\n\n  const saveRectsToLocalStorage = (rects) => {\n    const rectsStringified = JSON.stringify(rects);\n    localStorage.setItem(\"rects\", rectsStringified);\n  };\n\n  const handleRemoveRect = (id) => {\n    setRects((prevState) => {\n      const updatedRects = prevState.filter((el) => el.id !== id);\n      saveRectsToLocalStorage(updatedRects);\n      return updatedRects;\n    });\n  };\n\n  return (\n    <>\n      <Editor\n        handleSetColor={handleSetColor}\n        handleSetWidth={handleSetWidth}\n        handleSetHeight={handleSetHeight}\n        handleSetBorderRadius={handleSetBorderRadius}\n        handleSaveRect={handleSaveRect}\n      ></Editor>\n      <Output\n        outputColor={color}\n        outputWidth={width}\n        outputHeight={height}\n        outputBorderRadius={borderRadius}\n      ></Output>\n      <Gallery rects={rects} handleRemoveRect={handleRemoveRect}></Gallery>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}